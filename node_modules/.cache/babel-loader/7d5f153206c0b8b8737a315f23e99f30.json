{"ast":null,"code":"var _jsxFileName = \"/Users/godoyeon/dy/workspace/learning-react/ch10/todo-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport TodoInsert from './components/TodoInsert';\nimport TodoList from './components/TodoList';\nimport TodoTemplate from './components/TodoTemplate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [todos, setTodos] = useState([{\n    id: 1,\n    text: '리액트의 기초 알아보기',\n    checked: true\n  }, {\n    id: 2,\n    text: '컴포넌트 스타일링해 보기',\n    checked: true\n  }, {\n    id: 3,\n    text: '일정 관리 앱 만들어 보기',\n    checked: false\n  }]); // 고윳값으로 사용될 id\n  // ref를 사용하여 변수 담기\n\n  const nextId = useRef(4);\n  const onInsert = useCallback(text => {\n    const todo = {\n      id: nextId.current,\n      text,\n      checked: false\n    };\n    setTodos(todos.concat(todo));\n    nextId.current += 1; // nextId 1씩 더하기\n  }, [todos]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(TodoTemplate, {\n      children: [/*#__PURE__*/_jsxDEV(TodoInsert, {\n        onInsert: onInsert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        todos: todos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"0RfDlwcUYIeSxTMbRtAqBfhuYB4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/godoyeon/dy/workspace/learning-react/ch10/todo-app/src/App.js"],"names":["React","useState","TodoInsert","TodoList","TodoTemplate","App","todos","setTodos","id","text","checked","nextId","useRef","onInsert","useCallback","todo","current","concat"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAE,CAClC;AACEO,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,cAFR;AAGEC,IAAAA,OAAO,EAAE;AAHX,GADkC,EAMlC;AACEF,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,eAFR;AAGEC,IAAAA,OAAO,EAAE;AAHX,GANkC,EAWlC;AACEF,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,gBAFR;AAGEC,IAAAA,OAAO,EAAE;AAHX,GAXkC,CAAF,CAAlC,CADgB,CAmBhB;AACA;;AACA,QAAMC,MAAM,GAAGC,MAAM,CAAC,CAAD,CAArB;AAEA,QAAMC,QAAQ,GAAGC,WAAW,CAC1BL,IAAI,IAAI;AACN,UAAMM,IAAI,GAAG;AACXP,MAAAA,EAAE,EAAEG,MAAM,CAACK,OADA;AAEXP,MAAAA,IAFW;AAGXC,MAAAA,OAAO,EAAE;AAHE,KAAb;AAKAH,IAAAA,QAAQ,CAACD,KAAK,CAACW,MAAN,CAAaF,IAAb,CAAD,CAAR;AACAJ,IAAAA,MAAM,CAACK,OAAP,IAAkB,CAAlB,CAPM,CAOgB;AACvB,GATyB,EAU1B,CAACV,KAAD,CAV0B,CAA5B;AAaA,sBACE;AAAA,2BACI,QAAC,YAAD;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,QAAQ,EAAEO;AAAtB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEP;AAAjB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA7CD;;GAAMD,G;;KAAAA,G;AA+CN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport TodoInsert from './components/TodoInsert';\nimport TodoList from './components/TodoList';\nimport TodoTemplate from './components/TodoTemplate';\n\nconst App = () => {\n  const [todos, setTodos] = useState ([\n    {\n      id: 1,\n      text: '리액트의 기초 알아보기',\n      checked: true,\n    },\n    {\n      id: 2,\n      text: '컴포넌트 스타일링해 보기',\n      checked: true,\n    }, \n    {\n      id: 3,\n      text: '일정 관리 앱 만들어 보기',\n      checked: false,\n    },  \n  ]);\n\n  // 고윳값으로 사용될 id\n  // ref를 사용하여 변수 담기\n  const nextId = useRef(4);\n\n  const onInsert = useCallback(\n    text => {\n      const todo = {\n        id: nextId.current,\n        text,\n        checked: false,\n      };\n      setTodos(todos.concat(todo));\n      nextId.current += 1;  // nextId 1씩 더하기\n    },\n    [todos],\n  );\n\n  return (\n    <div>\n        <TodoTemplate>\n          <TodoInsert onInsert={onInsert}/>\n          <TodoList todos={todos} />\n        </TodoTemplate>\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}